name: Publish WASM
on:
  push:
    branches:
    - master
    - ci/*
    release:
      types: [published]

jobs:
  publish_wasm_demo:
    name: Publish WebAssembly Demo
    runs-on: ubuntu-20.04
    # only runs for push, so not for releases.
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust 1.52.1
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.52.1
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: cargo-release-wasm

      - name: Install wasm-pack and binaryen
        # run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
        #
        # wasm-opt seems to have a segfault, wasm-pack doesn't let you use a wasm-opt off your $PATH,
        # it has to use its own pinned version and is not being updated much at the moment.
        # So custom wasm-pack, and binaryen from github releases
        run: |
          cd /tmp
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

          VERSION=manual-1
          curl -sL -o wasm-pack.tar.gz https://github.com/cormacrelf/wasm-pack/releases/download/$VERSION/wasm-pack-$VERSION-x86_64-unknown-linux-gnu.tar.gz
          tar -xzvf wasm-pack.tar.gz
          cp wasm-pack $HOME/.local/bin/

          VERSION=version_101
          curl -sL -o binaryen.tar.gz https://github.com/WebAssembly/binaryen/releases/download/$VERSION/binaryen-$VERSION-x86_64-linux.tar.gz
          tar -xzvf binaryen.tar.gz
          cp binaryen-$VERSION/bin/* $HOME/.local/bin/

      - name: Yarn install
        run: cd crates/wasm/js-demo && yarn
      - name: Yarn build (dev)
        if: ${{ github.ref != 'refs/heads/master' }}
        run: cd crates/wasm/js-demo && yarn build -d
      - name: Yarn build (prod)
        if: ${{ github.ref == 'refs/heads/master' }}
        run: cd crates/wasm/js-demo && yarn build -p
      - name: Deploy
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: peaceiris/actions-gh-pages@v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_DIR: ./crates/wasm/js-demo/dist
          EXTERNAL_REPOSITORY: cormacrelf/citeproc-wasm-demo
          PUBLISH_BRANCH: gh-pages

  publish_npm:
    name: "Publish to NPM"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Get version info
        id: version
        run: |
          function set-output() {
            local name="$1"
            local value="$2"
            echo "setting output $name -> $value"
            echo "::set-output name=$name::$value"
          }

          IS_TAGGED_RELEASE=${{ github.event_name == 'release' && 'true' || 'false' }}
          DRY_RUN=${{ github.event_name == 'push' && github.ref != 'refs/heads/master' && 'true' || 'false' }}
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          set-output short_sha "${SHORT_SHA}"
          set-output npm_dry_run "$DRY_RUN"

          if $IS_TAGGED_RELEASE; then
            TAG=${GITHUB_REF#refs/tags/}
            IFS='-' read -ra PLAIN_VERSION POST_HYPHEN <<< "$TAG"
            if ! [ -z "$POST_HYPHEN" ]; then
              # i.e. there was a -alpha.1 appended, use the `next` dist tag
              set-output npm_dist_tag next
            else
              set-output npm_dist_tag latest
            fi
            set-output npm_version "$TAG"
          else
            set-output npm_version "v0.0.0-canary-${SHORT_SHA}"
            set-output npm_dist_tag canary
          fi

      - name: >
          Will execute: ${{ steps.version.outputs.npm_dry_run == 'true' && '[Dry run]' || ''}}
          Publish @citeproc-rs/wasm ${{ steps.version.outputs.npm_version }} to NPM,
          dist tag ${{ steps.version.outputs.npm_dist_tag }}
        run: echo

      - name: Install Rust 1.52.1
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.52.1
            override: true
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: cargo-release-wasm

      - name: Install wasm-pack and binaryen
        # run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
        run: |
          cd /tmp
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

          VERSION=manual-1
          curl -sL -o wasm-pack.tar.gz https://github.com/cormacrelf/wasm-pack/releases/download/$VERSION/wasm-pack-$VERSION-x86_64-unknown-linux-gnu.tar.gz
          tar -xzvf wasm-pack.tar.gz
          cp wasm-pack $HOME/.local/bin/

          VERSION=version_101
          curl -sL -o binaryen.tar.gz https://github.com/WebAssembly/binaryen/releases/download/$VERSION/binaryen-$VERSION-x86_64-linux.tar.gz
          tar -xzvf binaryen.tar.gz
          cp binaryen-$VERSION/bin/* $HOME/.local/bin/

      - name: Build for all targets
        working-directory: crates/wasm
        run: |
          ./scripts/npm-pkg-config.sh --features console

      - name: Log in to the NPM registry
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_PUBLISH_TOKEN}}" > .npmrc

      - name: Configure package for publishing to NPM
        working-directory: crates/wasm
        run: ./scripts/npm-pkg-config.sh --package-only --set-version ${{steps.version.outputs.npm_version }}

      - name: Publish @citeproc-rs/wasm to NPM
        working-directory: crates/wasm
        run: >
          npm publish dist --access public
          --tag ${{ steps.version.outputs.npm_dist_tag }}
          ${{ steps.version.outputs.npm_dry_run == 'true' && '--dry-run' || '' }}

