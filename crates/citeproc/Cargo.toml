# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright Â© 2018 Corporation for Digital Scholarship

[package]
name = "citeproc"
version = "0.0.1"
authors = ["Cormac Relf <web@cormacrelf.net>"]
license = "MPL-2.0"
edition = "2018"

[lib]
bench = false

[features]

# For WASM builds, use `citeproc = { version = "...", default-features = false }`
default = ["parallel"]

# Lets the processor compute batched updates in parallel on multiple threads,
# using rayon's work-stealing queues
parallel = [
  "rayon",
  "citeproc-db/parallel",
  # enables rayon for checking many DFA matches in parallel.
  # should only really help for docs with many references,
  # and otherwise slow things down a little bit.
  "citeproc-proc/parallel",
]

test-jemalloc = []
test-dlmalloc = []

[dependencies]
rayon = { version = "1.4.1", optional = true }
cfg-if = "0.1.10"
fnv = "1.0.7"
salsa = "0.15.2"
log = "0.4.11"
serde = { version = "1.0.116", features = ["rc"] }
serde_derive = "1.0.116"

csl = { path = "../csl", features = ["serde1"] }
citeproc-io = { path = "../io" }
citeproc-proc = { path = "../proc" }
citeproc-db = { path = "../db" }
thiserror = "1.0.20"
string-interner = "0.12.0"
parking_lot = "0.11.0"
rand = "0.7.3"
# use std feature despite never compiling without it because sometimes with
# custom targets / rustc -Z build-std, cfg(has_std) stops working and you get
# indexmap in no_std mode? idk. But this works. Petgraph stops complaining.
indexmap = { version = "1.6.2", features = ["std"]}


[dev-dependencies]
test_utils = { path = "../test-utils" }
criterion = "0.3.3"
pretty_assertions = "0.6.1"
lazy_static = "1.4.0"
serde_yaml = "0.8.13"
toml = "0.5.6"
env_logger = "0.7.1"
insta = "1.1"
# enables jemalloc for the test binaries. Gives 25-50% faster execution with
# the allocation-heavy code at the time of writing.
jemallocator = "0.3.2"
dlmalloc = { version = "0.1.4", features = ["global"] }

[dev-dependencies.datatest]
git = "https://github.com/cormacrelf/datatest"
branch = "main"
# main branch has this as the default
# features = ["test_case_registration"]

[[bench]]
name = "some"
harness = false

